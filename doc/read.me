# أولاً: تحديث قائمة الحزم
sudo apt-get update

# ثانيًا: تنزيل جميع تحديثات dist-upgrade دون تثبيت
sudo apt-get --download-only dist-upgrade

# لاحقًا (عندما تكون جاهزًا): تثبيت الحزم المنزلة
sudo apt update && sudo apt-get dist-upgrade


/var/cache/apt/archives/
sudo apt-get clean
sudo apt-get autoclean

اشرح role-based access control (RBAC)

install 
echo "deb https://debian.cassandra.apache.org 41x main" | sudo tee -a /etc/apt/sources.list.d/cassandra.sources.list

# إضافة المفتاح
curl https://downloads.apache.org/cassandra/KEYS | sudo apt-key add -

# التحديث والتثبيت
sudo apt-get update
sudo apt-get install cassandra

sudo apt update && sudo apt install g++ build-essential cmake qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virt-manager qemu-utils libvirt-dev libvirt0 libvirt-clients libvirt-daemon-system
sudo apt install -y pkg-config libxml2-dev libnl-3-dev libnl-route-3-dev libpugixml-dev
sudo apt update
sudo apt install librocksdb-dev
واريد ترتب لي تحميل وتكتب لي ملف باش سكربت مرتب ومنظم واحترافي اضمه في مشروعي

sudo apt-get install libcassandra-dev libuv1-dev libssl-dev
sudo apt-get install libcassandra-dev

include/
├── core/                       # النواة الأساسية المشتركة
│   ├── interfaces/
│   │   ├── IVirtualizable.hpp
│   │   ├── INetworkable.hpp
│   │   └── IManageable.hpp
I
│   ├── types.hpp
│   └── exceptions/
│       ├── CoreException.hpp
│       └── NetworkException.hpp
├── virtualization/             # ميزات الافتراضية فقط
│   ├── vm/
│   │   ├── VirtualMachine.hpp
│   │   └── VirtualMachinePool.hpp
│   ├── hypervisor/
│   │   ├── HypervisorConnector.hpp
│   │   └── HypervisorFactory.hpp
│   └── storage/
│       ├── VolumeManager.hpp
│       └── StorageBackend.hpp
├── network/                    # كل أنواع الشبكات
│   ├── decentralized/         # الشبكات اللامركزية
│   │   ├── PeerDiscovery.hpp
│   │   ├── DHTManager.hpp
│   │   └── ConsensusEngine.hpp
│   ├── traditional/           # الشبكات التقليدية
│   │   ├── NetworkManager.hpp
│   │   └── VirtualSwitch.hpp
│   └── common/
│       ├── Protocol.hpp
│       └── NetworkTypes.hpp
├── resources/                 # إدارة جميع الموارد
│   ├── hardware/
│   │   ├── CPUManager.hpp
│   │   ├── MemoryManager.hpp
│   │   └── StorageManager.hpp
│   ├── monitoring/
│   │   ├── ResourceMonitor.hpp
│   │   └── MetricsCollector.hpp
│   └── allocation/
│       ├── ResourceAllocator.hpp
│       └── LoadBalancer.hpp
├── security/                  # الأمان لجميع المكونات
│   ├── Cryptography.hpp
│   ├── Authentication.hpp
│   └── AccessControl.hpp
├── utils/                     # أدوات مساعدة مشتركة
│   ├── Result.hpp
│   ├── Logger.hpp
│   └── ConfigParser.hpp
└── api/                       # واجهات برمجة موحدة
    ├── REST/
    ├── CLI/
    └── SDK/


include/
├── core/                       # النواة الأساسية
│   ├── interfaces/             # الواجهات المجردة
│   ├── types.hpp              # الأنواع المشتركة
│   └── exceptions/            # الاستثناءات
├── virtualization/             # الافتراضية
├── network/                    # الشبكات
├── resources/                  # إدارة الموارد
├── database/                   # جديد: قواعد البيانات       ← هنا المجلد الجديد
│   ├── connectors/            # موصلات قواعد البيانات
│   │   ├── SQLiteConnector.hpp
│   │   ├── PostgreSQLConnector.hpp
│   │   └── MySQLConnector.hpp
│   ├── models/                # نماذج البيانات
│   │   ├── VMModel.hpp        # جدول الآلات الافتراضية
│   │   ├── NodeModel.hpp      # جدول العقد
│   │   ├── ResourceModel.hpp  # جدول الموارد
│   │   └── NetworkModel.hpp   # جدول الشبكات
│   ├── repositories/          # طبقة الوصول إلى البيانات
│   │   ├── VMRepository.hpp
│   │   ├── NodeRepository.hpp
│   │   ├── ResourceRepository.hpp
│   │   └── NetworkRepository.hpp
│   ├── migrations/            # ترحيل قواعد البيانات
│   │   ├── MigrationManager.hpp
│   │   └── migrations/
│   │       ├── 001_initial_schema.hpp
│   │       └── 002_add_network_tables.hpp
│   └── DatabaseManager.hpp    # المدير الرئيسي
├── api/                       # واجهات البرمجة - تم التوسيع
│   ├── web/                   # واجهات ويب
│   │   ├── REST/              # REST API
│   │   │   ├── controllers/   # المتحكمات
│   │   │   │   ├── VMController.hpp
│   │   │   │   ├── NodeController.hpp
│   │   │   │   ├── ResourceController.hpp
│   │   │   │   └── NetworkController.hpp
│   │   │   ├── models/        # نماذج الاستجابة/الطلب
│   │   │   │   ├── requests/
│   │   │   │   └── responses/
│   │   │   ├── middleware/    # middleware
│   │   │   │   ├── AuthenticationMiddleware.hpp
│   │   │   │   └── LoggingMiddleware.hpp
│   │   │   └── Router.hpp     # مسارات API
│   │   └── WebSocket/         # WebSocket API
│   │       ├── WebSocketServer.hpp
│   │       └── MessageHandler.hpp
│   ├── cli/                   # واجهة سطر الأوامر
│   │   ├── CommandHandler.hpp
│   │   ├── CommandParser.hpp
│   │   └── commands/
│   │       ├── VMCommands.hpp
│   │       ├── NetworkCommands.hpp
│   │       └── ResourceCommands.hpp
│   └── sdk/                   # حزمة التطوير
│       ├── clients/
│       │   ├── RESTClient.hpp
│       │   └── WebSocketClient.hpp
│       ├── models.hpp
│       └── VirtualizationSDK.hpp
├── security/                  # الأمان
├── utils/                     # الأدوات
└── services/                  # جديد: طبقة الخدمات
    ├── VMService.hpp          # خدمة الآلات الافتراضية
    ├── NetworkService.hpp     # خدمة الشبكات
    ├── ResourceService.hpp    # خدمة الموارد
    └── Orchestrator.hpp       # المنسق الرئيسي


    ابدأ باستخدام Compensation Stack (الأسلوب 2) — فهو الأنظف والأكثر قابلية للصيانة.
ويمكنك لاحقًا تطويره ليكون: 

    Thread-Safe
    يدعم Logging لكل خطوة Rollback
    يُعيد محاولة بعض الخطوات قبل التراجع (Retry Pattern)
     
     database/
├── interfaces/                 # الواجهات المجردة
│   ├── IDatabaseConnector.hpp
│   ├── IRepository.hpp        # واجهة للـ Repositories
│   └── IUnitOfWork.hpp        # واجهة لـ Unit of Work
├── connectors/                # الموصلات الملموسة
│   ├── PostgreSQLConnector.hpp
│   ├── SQLiteConnector.hpp
│   └── MySQLConnector.hpp
├── models/                    # نماذج البيانات
│   ├── VMModel.hpp
│   ├── NodeModel.hpp
│   └── ResourceModel.hpp
├── repositories/              # طبقة البيانات
│   ├── VMRepository.hpp
│   ├── NodeRepository.hpp
│   └── ResourceRepository.hpp
├── migrations/                # ترحيل قواعد البيانات
│   ├── MigrationManager.hpp
│   └── migrations/
└── DatabaseManager.hpp        # المدير الرئيسي
include/
├── security/                   # أمان مشترك
│   ├── cryptography/          # التشفير
│   │   ├── CryptoProvider.hpp
│   │   └── KeyManager.hpp
│   ├── authentication/        # المصادقة
│   │   ├── AuthManager.hpp
│   │   └── IdentityProvider.hpp
│   └── access/               # التحكم بالوصول
│       ├── ACLManager.hpp
│       └── PolicyEngine.hpp
network/
├── decentralized/
│   ├── discovery/            # اكتشاف الأقران
│   │   ├── PeerDiscovery.hpp
│   │   └── DHTManager.hpp
│   ├── consensus/           # آلية الإجماع
│   │   ├── ConsensusEngine.hpp
│   │   └── ConsensusProtocol.hpp
│   ├── messaging/           # المراسلة
│   │   ├── MessageRouter.hpp
│   │   └── PubSubEngine.hpp
│   └── storage/            # التخزين الموزع
│       ├── DistributedStorage.hpp
│       └── ReplicationManager.hpp
include/
├── config/                   # إدارة التكوين
│   ├── ConfigManager.hpp
│   ├── Configuration.hpp
│   └── ProfileManager.hpp